// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  image         String
  price         Decimal
  description   String          @default("no definido")
  ingredients   String          @default("no definido")
  details_order Details_Order[]
  category      Category        @relation(fields: [category_id], references: [id])
  category_id   Int
  favorite      Favorite[]
}

model Order {
  id             Int             @id @default(autoincrement())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  user           User            @relation(fields: [user_id], references: [id])
  user_id        Int
  details_order  Details_Order[]
  date           DateTime
  total          Decimal
  order_status   Order_status
  payment_status Method_pay
  payment        Payment[]
}

enum Method_pay {
  EFECTIVO
  TARJETA
  YAPE
}

enum Order_status {
  PENDIENTE
  ENTREGADO
  CANCELADO
}

model Details_Order {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order    @relation(fields: [order_id], references: [id])
  order_id   Int
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  image     String    @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   Product[]
}

model Opening_hour {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  start_hour DateTime
  end_hour   DateTime
  date       DateTime
}

model Payment {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  type      String
  amount    Decimal
  state     Method_pay
  order     Order      @relation(fields: [order_id], references: [id])
  order_id  Int
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  image     String
  email     String     @unique
  password  String
  address   String
  rol       Rol        @relation(fields: [rol_id], references: [id])
  rol_id    Int
  Order     Order[]
  Favorite  Favorite[]
}

model Rol {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  user      User[]
}

model Favorite {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [user_id], references: [id])
  user_id    Int
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
}